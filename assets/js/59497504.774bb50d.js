"use strict";(self.webpackChunkgrid_docs=self.webpackChunkgrid_docs||[]).push([[9281],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),u=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(r),f=n,m=d["".concat(i,".").concat(f)]||d[f]||p[f]||o;return r?a.createElement(m,s(s({ref:t},c),{},{components:r})):a.createElement(m,s({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var u=2;u<o;u++)s[u]=r[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},284:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var a=r(7462),n=r(3366),o=(r(7294),r(3905)),s=["components"],l={sidebar_position:1.3,title:"Creating Datastores from a Cluster",sidebar_label:"Creating Datastores from a Cluster"},i="Create from a cluster",u={unversionedId:"features/datastores/create-from-a-cluster",id:"features/datastores/create-from-a-cluster",title:"Creating Datastores from a Cluster",description:"Upload from a cluster",source:"@site/docs/features/datastores/create-from-a-cluster.md",sourceDirName:"features/datastores",slug:"/features/datastores/create-from-a-cluster",permalink:"/features/datastores/create-from-a-cluster",editUrl:"https://github.com/gridai/grid-docs/edit/master/docs/features/datastores/create-from-a-cluster.md",tags:[],version:"current",lastUpdatedAt:1649680922,formattedLastUpdatedAt:"4/11/2022",sidebarPosition:1.3,frontMatter:{sidebar_position:1.3,title:"Creating Datastores from a Cluster",sidebar_label:"Creating Datastores from a Cluster"},sidebar:"tutorialSidebar",previous:{title:"Creating Datastores from Session",permalink:"/features/datastores/create-from-a-session"},next:{title:"Periodic Upload",permalink:"/features/datastores/periodic-upload"}},c=[{value:"Upload from a cluster",id:"upload-from-a-cluster",children:[],level:2}],p={toc:c};function d(e){var t=e.components,r=(0,n.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"create-from-a-cluster"},"Create from a cluster"),(0,o.kt)("h2",{id:"upload-from-a-cluster"},"Upload from a cluster"),(0,o.kt)("p",null,"Use these instructions to upload from:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Corporate cluster."),(0,o.kt)("li",{parentName:"ul"},"Academic cluster.")),(0,o.kt)("p",null,"First, start screen on the jump node (to run jobs in the background)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"screen -S upload\n")),(0,o.kt)("p",null,"If your jump node allows a memory-intensive process, then skip this step. Otherwise, request an interactive machine. Here's an example using SLURM."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"srun --qos=batch --mem-per-cpu=10000 --ntasks=4 --time=12:00:00 --pty bash\n")),(0,o.kt)("p",null,"Once the job starts, install and log into Grid (get your username and ssh keys from the ",(0,o.kt)("a",{parentName:"p",href:"https://platform.grid.ai/#/settings"},"settings page"),")."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# install\npip install lightning-grid --upgrade\n\n# login\ngrid login --username YOUR_USERNAME --key YOUR_KEY\n")),(0,o.kt)("p",null,"Next, use the Datastores command to upload any folder:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"grid datastore create imagenet_folder --name imagenet\n")),(0,o.kt)("p",null,"You can safely close your ssh connection to the cluster (the screen will keep things running in the background)."))}d.isMDXComponent=!0}}]);