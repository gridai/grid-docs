"use strict";(self.webpackChunkgrid_docs=self.webpackChunkgrid_docs||[]).push([[7857],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(r),m=i,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||a;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2213:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return c},default:function(){return d}});var n=r(7462),i=r(3366),a=(r(7294),r(3905)),o=["components"],s={title:"Spot Instances",sidebar_label:"Spot Instances"},u="Lowering costs (BETA)",l={unversionedId:"features/runs/interruptible-machines",id:"features/runs/interruptible-machines",title:"Spot Instances",description:"Interruptible machines",source:"@site/docs/features/runs/13_interruptible-machines.md",sourceDirName:"features/runs",slug:"/features/runs/interruptible-machines",permalink:"/features/runs/interruptible-machines",editUrl:"https://github.com/gridai/grid-docs/edit/master/docs/features/runs/13_interruptible-machines.md",tags:[],version:"current",lastUpdatedAt:1649951293,formattedLastUpdatedAt:"4/14/2022",sidebarPosition:13,frontMatter:{title:"Spot Instances",sidebar_label:"Spot Instances"},sidebar:"tutorialSidebar",previous:{title:"Machines",permalink:"/features/runs/machines"},next:{title:"Auto-Resume Experiments",permalink:"/features/runs/auto-resume-experiments"}},c=[{value:"Interruptible machines",id:"interruptible-machines",children:[{value:"Enable via the UI",id:"enable-via-the-ui",children:[],level:3},{value:"Enable via the CLI",id:"enable-via-the-cli",children:[],level:3}],level:2},{value:"Prepare code for interruptible",id:"prepare-code-for-interruptible",children:[],level:2},{value:"Restarting interrupted jobs",id:"restarting-interrupted-jobs",children:[],level:2}],p={toc:c};function d(e){var t=e.components,s=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"lowering-costs-beta"},"Lowering costs (BETA)"),(0,a.kt)("h2",{id:"interruptible-machines"},"Interruptible machines"),(0,a.kt)("p",null,"Cloud machines are normally expensive. However, if your job can support being interrupted at any time (ie: fine tuning, model that can be restarted) then you could use the ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"spot instances"))," feature in Grid."),(0,a.kt)("h3",{id:"enable-via-the-ui"},"Enable via the UI"),(0,a.kt)("p",null,(0,a.kt)("img",{src:r(1684).Z})),(0,a.kt)("p",null,(0,a.kt)("img",{src:r(2847).Z})),(0,a.kt)("h3",{id:"enable-via-the-cli"},"Enable via the CLI"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"grid run --use_spot pl_mnist.py\n")),(0,a.kt)("h2",{id:"prepare-code-for-interruptible"},"Prepare code for interruptible"),(0,a.kt)("p",null,"To take advantage of interruptible machines, make sure your code does a few things:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"You are saving checkpoints or any state you need. Grid automatically picks these up into your artifacts."),(0,a.kt)("li",{parentName:"ol"},"Make sure your code can be restarted from a checkpoint or state file.")),(0,a.kt)("h2",{id:"restarting-interrupted-jobs"},"Restarting interrupted jobs"),(0,a.kt)("p",null,"Once the machine is interrupted, your job on Grid will stop. If you want to continue running your code do the following:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Navigate to your experiment artifacts."),(0,a.kt)("li",{parentName:"ol"},"copy the link to the state files (or checkpoint) that you need."),(0,a.kt)("li",{parentName:"ol"},"Resubmit the job with the path to that file.")),(0,a.kt)("p",null,"For example, assume your script has an argument called ",(0,a.kt)("strong",{parentName:"p"},"--ck_path")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"grid run --use_spot main.py --ck_path https://grid.ai/url/to/checkpoint.ckpt\n")))}d.isMDXComponent=!0},1684:function(e,t,r){t.Z=r.p+"assets/images/spot-2b35f4c22b8f4756c30b37a6107e53da.gif"},2847:function(e,t,r){t.Z=r.p+"assets/images/usespot-27ab84c4438fc5420f159306f72c4866.png"}}]);