"use strict";(self.webpackChunkgrid_docs=self.webpackChunkgrid_docs||[]).push([[9339],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=u(t),d=r,g=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return t?a.createElement(g,l(l({ref:n},c),{},{components:t})):a.createElement(g,l({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=t[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8303:function(e,n,t){t.d(n,{Z:function(){return u}});var a=t(7294),r=t(6010),i={note:a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},a.createElement("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})),tip:a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},a.createElement("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})),danger:a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},a.createElement("path",{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})),info:a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},a.createElement("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})),caution:a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},a.createElement("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))},l={note:"secondary",tip:"success",danger:"danger",info:"info",caution:"warning"};function o(e){var n=e.children,t=e.type,o=e.title,s=void 0===o?t:o,u=e.icon,c=void 0===u?i[t]:u;return a.createElement("div",{className:(0,r.Z)("admonition","admonition-"+t,"alert","alert--"+l[t])},a.createElement("div",{className:"admonition-heading"},a.createElement("h5",null,a.createElement("span",{className:"admonition-icon"},c),s)),a.createElement("div",{className:"admonition-content"},n))}var s="admonition_heading_BIf6",u=function(e){return a.createElement("div",{className:s},a.createElement(o,{type:"info",title:"Note"},"\xa0\xa0",a.createElement("b",null,e.children)))}},5632:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var a=t(7462),r=t(3366),i=(t(7294),t(3905)),l=t(8303),o=["components"],s={description:"Flexibility when using command line"},u="Actions",c={unversionedId:"features/runs/actions",id:"features/runs/actions",title:"Actions",description:"Flexibility when using command line",source:"@site/docs/features/runs/actions.md",sourceDirName:"features/runs",slug:"/features/runs/actions",permalink:"/features/runs/actions",editUrl:"https://github.com/gridai/grid-docs/edit/master/docs/features/runs/actions.md",tags:[],version:"current",lastUpdatedAt:1647887867,formattedLastUpdatedAt:"3/21/2022",frontMatter:{description:"Flexibility when using command line"},sidebar:"tutorialSidebar",previous:{title:"YAML configs",permalink:"/features/runs/yaml-configs/"},next:{title:"Using YAML",permalink:"/features/runs/yaml-configs/yaml-api"}},p=[{value:"About Actions",id:"about-actions",children:[],level:2},{value:"Available Actions",id:"available-actions",children:[{value:"on_build_start",id:"on_build_start",children:[],level:3},{value:"on_build_end",id:"on_build_end",children:[],level:3},{value:"on_exeperiment_start",id:"on_exeperiment_start",children:[],level:3},{value:"on_experiment_end",id:"on_experiment_end",children:[],level:3}],level:2},{value:"Configuring Actions",id:"configuring-actions",children:[{value:"Environment variable substitution",id:"environment-variable-substitution",children:[],level:3},{value:"Default environment variables",id:"default-environment-variables",children:[],level:3},{value:"String operations",id:"string-operations",children:[],level:3}],level:2}],m={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"actions"},"Actions"),(0,i.kt)("h2",{id:"about-actions"},"About Actions"),(0,i.kt)("p",null,"Grid Actions give you the flexibility of adding steps to your training workflow without having to change your training script."),(0,i.kt)("p",null,"Example uses of actions:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Installing libraries like Apex"),(0,i.kt)("li",{parentName:"ul"},"Downloading data"),(0,i.kt)("li",{parentName:"ul"},"Processing something"),(0,i.kt)("li",{parentName:"ul"},"...")),(0,i.kt)("h2",{id:"available-actions"},"Available Actions"),(0,i.kt)("h3",{id:"on_build_start"},"on","_","build","_","start"),(0,i.kt)("p",null,"These are executed as your Run's image is built. We cache these commands on every git SHA. This is useful for installing dependencies and other system setup tasks."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"compute:\n  train:\n\n    actions:\n      on_build_start:\n        - apt-get install wget -y\n        - pip install tqdm\n")),(0,i.kt)("h3",{id:"on_build_end"},"on","_","build","_","end"),(0,i.kt)("p",null,"These are executed as at the end of building Run's image."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"compute:\n  train:\n\n    actions:\n      on_build_end:\n        - apt update\n")),(0,i.kt)(l.Z,{mdxType:"Note"}," Commands automatically run as sudo "),(0,i.kt)("h3",{id:"on_exeperiment_start"},"on","_","exeperiment","_","start"),(0,i.kt)("p",null,"Arbitrary commands that run just before your training process starts. This is useful for downloading and preparing data, etc."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"compute:\n  train:\n\n    actions:\n      on_experiment_start:\n        - bash download_dataset.sh\n")),(0,i.kt)("h3",{id:"on_experiment_end"},"on","_","experiment","_","end"),(0,i.kt)("p",null,"Runs after your script stops. This is useful for post-processing data, sending alerts and notifications to your systems, etc."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"compute:\n  train:\n\n    actions:\n      on_experiment_end:\n        - apt-get install curl -y\n        - curl -X GET http://webhook.com?success=true\n")),(0,i.kt)("h2",{id:"configuring-actions"},"Configuring Actions"),(0,i.kt)("p",null,"You can configure Grid Actions by using a Grid config file ","(","see details on ",(0,i.kt)("a",{parentName:"p",href:"./yaml-configs"},"Grid YML",")"),"."),(0,i.kt)("p",null,"Here's a full example of a Grid configuration using actions:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"compute:\n  provider:\n    credentials: cc-wv4l9\n    region: us-east-1\n    vendor: aws\n\n  train:\n    cpus: 1\n    gpus: 0\n    instance: t2.xlarge\n\n    # Actions need to be passed as one command\n    # per line.\n    actions:\n      on_build_start:\n        - apt-get install wget -y\n        - pip install tqdm\n\n      on_experiment_start:\n        - bash download_dataset.sh\n\n      on_experiment_end:\n        - apt-get install curl -y\n        - curl -X GET http://webhook.com?success=true\n")),(0,i.kt)("p",null,"As you can see, you can pass one command per line. You can pass as many commands as you'd like."),(0,i.kt)("h3",{id:"environment-variable-substitution"},"Environment variable substitution"),(0,i.kt)("p",null,"Grid allows environment variable substitution for ",(0,i.kt)("inlineCode",{parentName:"p"},"on_experiment_start")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"on_experiment_end")," actions. All declared environment variables for the run are available in the substitution ","(","as well as some Grid predefined variables",")",". Example config:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'compute:\n\n  train:\n    cpus: 1\n    gpus: 0\n    instance: t2.medium\n    framework: lightning\n\n    environment:\n      WEBHOOK_URL: https://hooks.example.com/grid\n\n    # Actions need to be passed as one command\n    # per line.\n    actions:\n      on_build_start:\n        - apt-get update\n        - apt-get install curl -y\n      on_experiment_start:\n        - bash before.sh\n\n      on_experiment_end:\n        - |\n            curl -X POST -d \'{"name": "${GRID_EXPERIMENT_ID}", "instance_type": "${GRID_INSTANCE_TYPE}", "status": "status", "step": "after"}\' ${WEBHOOK_URL}\n\n')),(0,i.kt)("h3",{id:"default-environment-variables"},"Default environment variables"),(0,i.kt)("p",null,"Grid sets several environment variables by default for all experiments:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"GRID","_","EXPERIMENT","_","ID")," - experiment's ID"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"GRID","_","EXPERIMENT","_","NAME")," - experiment name"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"GRID","_","USER","_","ID")," - ID of the user who created the experiment"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"GRID","_","CLUSTER","_","ID")," - ID of the cluster where experiment is running"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"GRID","_","INSTANCE","_","TYPE")," - machine type ","(",(0,i.kt)("em",{parentName:"li"},"t2.medium,")," ",(0,i.kt)("em",{parentName:"li"},"g4dn.xlarge,")," etc.",")")),(0,i.kt)("h3",{id:"string-operations"},"String operations"),(0,i.kt)("p",null,"Grid provides partial emulation for bash string operations. This can be used to manipulate string values prior to substitution."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Example variable substitution with substring:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"on_experiment_end:\n- |\n    echo ${GRID_EXPERIMENT_ID:0:4} # Getting first 4 symbols\n\n")),(0,i.kt)("p",null,"Grid emulates the below string operations:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"${parameter^}\n${parameter^^}\n${parameter,}\n${parameter,,}\n${parameter:position}\n${parameter:position:length}\n${parameter#substring}\n${parameter##substring}\n${parameter%substring}\n${parameter%%substring}\n${parameter/substring/replacement}\n${parameter//substring/replacement}\n${parameter/#substring/replacement}\n${parameter/%substring/replacement}\n${#parameter}\n${parameter=default}\n${parameter:=default}\n${parameter:-default}\n")))}d.isMDXComponent=!0}}]);