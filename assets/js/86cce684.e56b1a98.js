"use strict";(self.webpackChunkgrid_docs=self.webpackChunkgrid_docs||[]).push([[5738],{3905:function(t,e,a){a.d(e,{Zo:function(){return d},kt:function(){return l}});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function s(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},o=Object.keys(t);for(r=0;r<o.length;r++)a=o[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)a=o[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var p=r.createContext({}),c=function(t){var e=r.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):s(s({},e),t)),a},d=function(t){var e=c(t.components);return r.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,o=t.originalType,p=t.parentName,d=i(t,["components","mdxType","originalType","parentName"]),m=c(a),l=n,h=m["".concat(p,".").concat(l)]||m[l]||u[l]||o;return a?r.createElement(h,s(s({ref:e},d),{},{components:a})):r.createElement(h,s({ref:e},d))}));function l(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var o=a.length,s=new Array(o);s[0]=m;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i.mdxType="string"==typeof t?t:n,s[1]=i;for(var c=2;c<o;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8618:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return d},default:function(){return m}});var r=a(7462),n=a(3366),o=(a(7294),a(3905)),s=["components"],i={title:"Attaching Datastores",sidebar_label:"Attaching Datastores"},p=void 0,c={unversionedId:"features/runs/attaching-datastores",id:"features/runs/attaching-datastores",title:"Attaching Datastores",description:"Attach to a RUN",source:"@site/docs/features/runs/7_attaching-datastores.md",sourceDirName:"features/runs",slug:"/features/runs/attaching-datastores",permalink:"/features/runs/attaching-datastores",editUrl:"https://github.com/gridai/grid-docs/edit/master/docs/features/runs/7_attaching-datastores.md",tags:[],version:"current",lastUpdatedAt:1648802247,formattedLastUpdatedAt:"4/1/2022",sidebarPosition:7,frontMatter:{title:"Attaching Datastores",sidebar_label:"Attaching Datastores"},sidebar:"tutorialSidebar",previous:{title:"Runs with Dockerfile",permalink:"/features/runs/running-experiments-with-a-dockerfile"},next:{title:"Accessing Artifacts",permalink:"/features/runs/artifacts"}},d=[],u={toc:d};function m(t){var e=t.components,i=(0,n.Z)(t,s);return(0,o.kt)("wrapper",(0,r.Z)({},u,i,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Datastore can only be mounted to a Run at Run creation time:::")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("h1",{parentName:"div",id:"attaching-datastores"},"Attaching Datastores"),(0,o.kt)("h2",{parentName:"div",id:"attach-to-a-run"},"Attach to a RUN"),(0,o.kt)("p",{parentName:"div"},"You can mount a datastore to a run to make your experiments run faster! By default, the datastore is mounted at /datastores. When attaching datastores to a run, take note of the path your script uses. For example if your script takes an argument ",(0,o.kt)("em",{parentName:"p"},"my_data_path")," and you want to mount the ",(0,o.kt)("em",{parentName:"p"},"cats")," datastore:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"grid run main.py --my_data_path /datastores/cats/1\n")),(0,o.kt)("h2",{parentName:"div",id:"datastore-paths"},"Datastore paths"),(0,o.kt)("p",{parentName:"div"},"Say you have a dataset with this structure:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"my_dataset /\n  train/\n    ...\n  val/\n    ...\n")),(0,o.kt)("p",{parentName:"div"},"on your local machine, you call the script like so,"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"python main.py --root my_dataset/\n")),(0,o.kt)("p",{parentName:"div"},"your script uses the dataset like this,"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"args.add_argument('-root')\nroot = args.parse_args()\n\ntrain = load(root + 'train')\nval = load(root + 'val')\n")),(0,o.kt)("p",{parentName:"div"},"When you upload a datastore to Grid:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"grid datastore create my_dataset\n")),(0,o.kt)("p",{parentName:"div"},"it is available under this structure:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"train/\n  ...\nval/\n  ...\n")),(0,o.kt)("p",{parentName:"div"},"To run on this datastore, select the datastore from the dropdown"),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("img",{src:a(195).Z})),(0,o.kt)("p",{parentName:"div"},"Now pass the name of the datastore to your command"),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("img",{src:a(2805).Z})),(0,o.kt)("p",{parentName:"div"},"which is equivalent to calling your script like so:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# python\npython pl_mnist.py --root /datastores\n\n# with grid\npython pl_mnist.py --root /datastores/my-dataset/1\n")),(0,o.kt)("p",{parentName:"div"},"The datastore path has 3 parts:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/datastores/[name]/[version]\n")),(0,o.kt)("p",{parentName:"div"},"Example, datastore named elephant (version 3)"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/datastores/elephant/3\n")))))}m.isMDXComponent=!0},195:function(t,e,a){e.Z=a.p+"assets/images/runs-select-datastore-ca23bec290a5d8def4cb4143bd213d56.png"},2805:function(t,e,a){e.Z=a.p+"assets/images/script-arguments-23ef703f41b73e782fa6cef3e3677a16.png"}}]);