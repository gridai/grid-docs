"use strict";(self.webpackChunkgrid_docs=self.webpackChunkgrid_docs||[]).push([[6173],{3905:function(e,n,a){a.d(n,{Zo:function(){return u},kt:function(){return c}});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function p(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),o=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},u=function(e){var n=o(e.components);return t.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=o(a),c=r,h=d["".concat(s,".").concat(c)]||d[c]||m[c]||i;return a?t.createElement(h,l(l({ref:n},u),{},{components:a})):t.createElement(h,l({ref:n},u))}));function c(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=d;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var o=2;o<i;o++)l[o]=a[o];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},7195:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return o},toc:function(){return u},default:function(){return d}});var t=a(7462),r=a(3366),i=(a(7294),a(3905)),l=["components"],p={title:"Hyperparameter Sweep Syntax",sidebar_label:"Hyperparameter Sweep Syntax"},s=void 0,o={unversionedId:"features/runs/Creating Runs/Basic Runs/sweep-syntax",id:"features/runs/Creating Runs/Basic Runs/sweep-syntax",title:"Hyperparameter Sweep Syntax",description:"Check the Runs FAQ for common questions about how to use Runs. This page is periodically updated with questions from the Grid community.",source:"@site/docs/features/runs/1_Creating Runs/1_Basic Runs/3_sweep-syntax.md",sourceDirName:"features/runs/1_Creating Runs/1_Basic Runs",slug:"/features/runs/Creating Runs/Basic Runs/sweep-syntax",permalink:"/features/runs/Creating Runs/Basic Runs/sweep-syntax",editUrl:"https://github.com/gridai/grid-docs/edit/master/docs/features/runs/1_Creating Runs/1_Basic Runs/3_sweep-syntax.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Hyperparameter Sweep Syntax",sidebar_label:"Hyperparameter Sweep Syntax"},sidebar:"tutorialSidebar",previous:{title:"Basic Run Creation",permalink:"/features/runs/Creating Runs/Basic Runs/basic-runs"},next:{title:"Advanced Run Creation",permalink:"/features/runs/Creating Runs/Adv Runs/README"}},u=[{value:"Python flags",id:"python-flags",children:[{value:"boolean",id:"boolean",children:[],level:3},{value:"float",id:"float",children:[],level:3},{value:"int",id:"int",children:[],level:3},{value:"string",id:"string",children:[],level:3}],level:2},{value:"Grid extensions",id:"grid-extensions",children:[{value:"distribution",id:"distribution",children:[],level:3},{value:"list",id:"list",children:[],level:3},{value:"range",id:"range",children:[],level:3},{value:"string list",id:"string-list",children:[],level:3}],level:2},{value:"Grid Search",id:"grid-search",children:[],level:2},{value:"Random Search",id:"random-search",children:[],level:2},{value:"Skipping Parameter Evaluation",id:"skipping-parameter-evaluation",children:[],level:2}],m={toc:u};function d(e){var n=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,t.Z)({},m,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Check the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.grid.ai/features/runs/faq.md"},"Runs FAQ")," for common questions about how to use Runs. This page is periodically updated with questions from the Grid community."))),(0,i.kt)("h1",{id:"hyperparameter-sweeps"},"Hyperparameter Sweeps"),(0,i.kt)("p",null,"Grid Runs offer the abilty to launch ",(0,i.kt)("a",{parentName:"p",href:"https://www.grid.ai/what-are-hyperparameter-sweeps-and-why-are-they-important-to-production-machine-learning"},"hyperparameter sweeps")," without changing a single line of code!\nThis feature will allow you to run multiple permutations of your training script (i.e. an experiment) on different machines in parallel.\nJust make sure your training script can take arguments from the CLI:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"grid run main.py --layers 32 --learning_rate 0.01\n")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This page provides a list of arguments specific to running hyperparameter sweeps. For the full Grid CLI API reference, visit ",(0,i.kt)("a",{parentName:"p",href:"/cli"},"this page. ")))),(0,i.kt)("h2",{id:"python-flags"},"Python flags"),(0,i.kt)("h3",{id:"boolean"},"boolean"),(0,i.kt)("p",null,"To create a hyperparameter sweep over boolean values, do NOT use toggle flags."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"# DO NOT take booleans like this\ngrid run main.py --do_something\n")),(0,i.kt)("p",null,"Instead, your script should be written such that it takes its value explicitly. For example, your script could take ",(0,i.kt)("inlineCode",{parentName:"p"},"1"),"/",(0,i.kt)("inlineCode",{parentName:"p"},"0"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"True"),"/",(0,i.kt)("inlineCode",{parentName:"p"},"False"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'yes'"),"/",(0,i.kt)("inlineCode",{parentName:"p"},"'no'"),", etc. as boolean values:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"# take booleans like this\ngrid run foo.py --bool_flag_one True --bool_flag_two f\n")),(0,i.kt)("p",null,"This way, grid can perform a hyperparameter sweep over your boolean values: (see the ",(0,i.kt)("a",{parentName:"p",href:"#grid-search"},"Grid Search")," section below)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"grid run foo.py --bar '[True, False]'\n")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If you are using python / argparse, use the following template:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from distutils.utils import strtobool\nparser.add_argument(\n    '--my_bool_flag',\n    dest='my_flag',\n    type=lambda x: bool(strtobool(x)),\n    # or, more simply:\n    # type=lambda x: x == 'True',\n)\n")),(0,i.kt)("p",{parentName:"div"},"Using ",(0,i.kt)("inlineCode",{parentName:"p"},"type=bool")," is ",(0,i.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/15008758/parsing-boolean-values-with-argparse"},"not what you want")))),(0,i.kt)("h3",{id:"float"},"float"),(0,i.kt)("p",null,"Grid supports standard float notation and scientific notation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"grid run main.py --learning_rate 0.01\ngrid run main.py --learning_rate 1e-2\n")),(0,i.kt)("h3",{id:"int"},"int"),(0,i.kt)("p",null,"Grid supports standard integer notation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"grid run main.py --batch_size 32\n")),(0,i.kt)("h3",{id:"string"},"string"),(0,i.kt)("p",null,"Grid supports standard string notation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"grid run main.py --model bert\ngrid run main.py --model 'bert'\ngrid run main.py --model \"bert\"\n")),(0,i.kt)("h2",{id:"grid-extensions"},"Grid extensions"),(0,i.kt)("h3",{id:"distribution"},"distribution"),(0,i.kt)("p",null,"Calls the script with each value sampled from any ",(0,i.kt)("a",{parentName:"p",href:"https://numpy.org/doc/1.16/reference/routines.random.html#distributions"},"numpy distribution"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'grid run main.py --alpha "uniform(1e-5, 1e-1, 3)"\n')),(0,i.kt)("p",null,"Grid will submit 3 jobs here:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# job 1\ngrid run main.py --alpha 0.03977392,\n\n# job 2\ngrid run main.py --alpha 0.04835479\n\n# job 3\ngrid run main.py --alpha 0.05200016\n")),(0,i.kt)("p",null,"This is equivalent to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},">>> np.random.uniform(1e-5, 1e-1, 3)\narray([0.03977392, 0.04835479, 0.05200016])\n")),(0,i.kt)("h3",{id:"list"},"list"),(0,i.kt)("p",null,"Calls the script with each value in the list"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'grid run main.py --layers "[32, 64, 128]"\n')),(0,i.kt)("p",null,"Grid will submit 3 jobs here:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# job 1\ngrid run main.py --layers 32\n\n# job 2\ngrid run main.py --layers 64\n\n# job 3\ngrid run main.py --layers 128\n")),(0,i.kt)("h3",{id:"range"},"range"),(0,i.kt)("p",null,"Calls the script with each value in the range."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'grid run main.py --layers "range(1, 10, 2)"\n')),(0,i.kt)("p",null,"Grid will submit 3 jobs here:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# job 1\ngrid run main.py --layers 1\n\n# job 2\ngrid run main.py --layers 3\n\n# job 3\ngrid run main.py --layers 5\n\n# job 4\ngrid run main.py --layers 7\n\n# job 5\ngrid run main.py --layers 9\n")),(0,i.kt)("p",null,"This is equivalent to the ",(0,i.kt)("a",{parentName:"p",href:"https://www.w3schools.com/python/ref_func_range.asp"},"Python Range syntax")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},">>> list(range(1, 10, 2))\n[1, 3, 5, 7, 9]\n")),(0,i.kt)("h3",{id:"string-list"},"string list"),(0,i.kt)("p",null,"Calls the script with each value in the list"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"grid run main.py --model \"['resnet18' 'transformer', 'resnet50']\"\n")),(0,i.kt)("p",null,"Grid will submit 3 jobs here:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# job 1\ngrid run main.py --model resnet18\n\n# job 2\ngrid run main.py --model transformer\n\n# job 3\ngrid run main.py --model resnet50\n")),(0,i.kt)("h2",{id:"grid-search"},"Grid Search"),(0,i.kt)("p",null,"To generate combinations (ie: a Grid Search), pass in multiple flags"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'grid run main.py --alpha "uniform(1e-5, 1e-1, 3)" --beta "[1, 2, 3, 4]"\n')),(0,i.kt)("p",null,"Generates 3 x 4 = 12 experiments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"grid run main.py --alpha 0.03977392 --beta 1\ngrid run main.py --alpha 0.03977392 --beta 2\ngrid run main.py --alpha 0.03977392 --beta 3\ngrid run main.py --alpha 0.03977392 --beta 4\n\ngrid run main.py --alpha 0.04835479 --beta 1\ngrid run main.py --alpha 0.04835479 --beta 2\ngrid run main.py --alpha 0.04835479 --beta 3\ngrid run main.py --alpha 0.04835479 --beta 4\n\ngrid run main.py --alpha 0.05200016 --beta 1\ngrid run main.py --alpha 0.05200016 --beta 2\ngrid run main.py --alpha 0.05200016 --beta 3\ngrid run main.py --alpha 0.05200016 --beta 4\n")),(0,i.kt)("p",null,"To run only a sample of these, choose the Random search option."),(0,i.kt)("h2",{id:"random-search"},"Random Search"),(0,i.kt)("p",null,"The following command, generates 12 experiments."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'grid run main.py --alpha "uniform(1e-5, 1e-1, 3)" --beta "[1, 2, 3, 4]"\n')),(0,i.kt)("p",null,"Generates 3 x 4 = 12 experiments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"grid run main.py --alpha 0.03977392 --beta 1\ngrid run main.py --alpha 0.03977392 --beta 2\ngrid run main.py --alpha 0.03977392 --beta 3\ngrid run main.py --alpha 0.03977392 --beta 4\n\ngrid run main.py --alpha 0.04835479 --beta 1\ngrid run main.py --alpha 0.04835479 --beta 2\ngrid run main.py --alpha 0.04835479 --beta 3\ngrid run main.py --alpha 0.04835479 --beta 4\n\ngrid run main.py --alpha 0.05200016 --beta 1\ngrid run main.py --alpha 0.05200016 --beta 2\ngrid run main.py --alpha 0.05200016 --beta 3\ngrid run main.py --alpha 0.05200016 --beta 4\n")),(0,i.kt)("p",null,"Using ",(0,i.kt)("a",{parentName:"p",href:"https://jmlr.csail.mit.edu/papers/volume13/bergstra12a/bergstra12a.pdf"},"Random Search")," you can get close to optimal performance without needing to run all possible combinations. To use random search with Grid, simply choose that option using the ",(0,i.kt)("inlineCode",{parentName:"p"},"--strategy")," option of ",(0,i.kt)("inlineCode",{parentName:"p"},"grid run"),". "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'grid run --strategy random_search \\\n         --num_trials 3 \\\n         main.py \\\n         --alpha "uniform(1e-5, 1e-1, 3)" \\\n         --beta "[1, 2, 3, 4]"\n')),(0,i.kt)("p",null,"This will choose a subset of the combinations generated and only run 3 experiments."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"grid run main.py --alpha 0.03977392 --beta 1\ngrid run main.py --alpha 0.03977392 --beta 2\ngrid run main.py --alpha 0.03977392 --beta 3 # <-- chosen (randomly)\ngrid run main.py --alpha 0.03977392 --beta 4\n\ngrid run main.py --alpha 0.04835479 --beta 1 # <-- chosen (randomly)\ngrid run main.py --alpha 0.04835479 --beta 2\ngrid run main.py --alpha 0.04835479 --beta 3 # <-- chosen (randomly)\ngrid run main.py --alpha 0.04835479 --beta 4\n\ngrid run main.py --alpha 0.05200016 --beta 1\ngrid run main.py --alpha 0.05200016 --beta 2\ngrid run main.py --alpha 0.05200016 --beta 3\ngrid run main.py --alpha 0.05200016 --beta 4\n")),(0,i.kt)("h2",{id:"skipping-parameter-evaluation"},"Skipping Parameter Evaluation"),(0,i.kt)("p",null,"Grid's syntax for scheduling multiple experiments with combinations of arguments (ie. Grid Search or Random Search)\nsometimes might conflict with the expected script arguments.\nThat's when you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"none")," strategy for parameter evaluation.\nThis allows the script to interpret and control the behavior of ",(0,i.kt)("inlineCode",{parentName:"p"},'--alpha "uniform(1e-5, 1e-1, 3)"')," and ",(0,i.kt)("inlineCode",{parentName:"p"},'--beta "[1, 2, 3, 4]"')," script arguments."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'grid run --strategy none \\\n         main.py \\\n         --alpha "uniform(1e-5, 1e-1, 3)" \\\n         --beta "[1, 2, 3, 4]"\n')),(0,i.kt)("p",null,"This will schedule exactly one experiment and pass each script argument as-is without evaluation. Another example is when you want to",(0,i.kt)("br",{parentName:"p"}),"\n","pass extra arguments via the CLI with ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/facebookresearch/hydra"},"Hydra"),"."))}d.isMDXComponent=!0}}]);