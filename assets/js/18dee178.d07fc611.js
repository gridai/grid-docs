"use strict";(self.webpackChunkgrid_docs=self.webpackChunkgrid_docs||[]).push([[582],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},233:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={},c="Using YAML",l={unversionedId:"features/runs/yaml-configs/yaml-api",id:"features/runs/yaml-configs/yaml-api",title:"Using YAML",description:"In addition to CLI parameters, Grid supports the use of YML files so you don't have to pass in many parameters in all occasions. If you don't change compute parameters often, we suggest you create a Grid config file and use that instead.",source:"@site/docs/features/runs/17_yaml-configs/2_yaml-api.md",sourceDirName:"features/runs/17_yaml-configs",slug:"/features/runs/yaml-configs/yaml-api",permalink:"/features/runs/yaml-configs/yaml-api",editUrl:"https://github.com/gridai/grid-docs/edit/master/docs/features/runs/17_yaml-configs/2_yaml-api.md",tags:[],version:"current",lastUpdatedAt:1655927279,formattedLastUpdatedAt:"6/22/2022",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"FAQ",permalink:"/features/runs/faq"},next:{title:"\u26a1\ufe0fMobile",permalink:"/features/mobile/"}},u=[{value:"Grid Spec Overview",id:"grid-spec-overview",children:[],level:2},{value:"Creating Runs With a Config File",id:"creating-runs-with-a-config-file",children:[],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"using-yaml"},"Using YAML"),(0,o.kt)("p",null,"In addition to CLI parameters, Grid supports the use of YML files so you don't have to pass in many parameters in all occasions. If you don't change compute parameters often, we suggest you create a Grid config file and use that instead."),(0,o.kt)("h2",{id:"grid-spec-overview"},"Grid Spec Overview"),(0,o.kt)("p",null,"The following YML file contains a commented version of every YML key. You need to provide these keys when writing a config file and change the properties to what you need."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Use either ",(0,o.kt)("a",{parentName:"p",href:"/platform/Custom%20Cloud%20Credentials/grid-cluster-context"},"cluster context")," or make sure to place your cluster ID in the ",(0,o.kt)("inlineCode",{parentName:"p"},"cluster")," field, replacing the ",(0,o.kt)("strong",{parentName:"p"},"XXXXXX")," placeholder."))),(0,o.kt)("p",null,"Config can be used to specify arguments that will be used to run experiments.\nApart from parametrization config allows to define custom ",(0,o.kt)("inlineCode",{parentName:"p"},"actions")," executed in given moments of the experitment lifecycle, and pass environment variables.\nYou don't have to define more parameters than you actually want to override, missing ones from config we have the default CLI values.\nTo check the defaults please refer to the CLI docs ",(0,o.kt)("a",{parentName:"p",href:"../../cli.md"},"here"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"# Main compute configuration. Defines parameters for `grid run` command. \ncompute:\n\n  # For BYOC users, we can specify directly which cluster to run experiments on.\n  provider:\n    cluster: prod-2                         # [str] --cluster\n\n  # Train section defines the training environment each experiement eg. instance type, datastore access, custom actions.\n  train:\n    framework: lightning                    # [enum] --framework\n    environment:\n      MY_ENVIRONMENT_VARIABLE: \"example\"    # Pass in environment variables\n    dependency_file_info:\n      path: null                            # [str] --dependency_file\n    instance: m5a.large                     # [enum] --instance_type\n    use_spot: False                         # [str] --use_spot\n\n# We should ideally remove those are we hope to depricate gpus/cpus\n#    cpus: int 1                            # --cpus - cannot be more than available in the `instance`\n#    gpus: int 0                            # --gpus - cannot be more than available in the `instance`\n    storage_gb: 100                         # [int] --memory [should be greater than 100Gb]\n    localdir: False                         # [bool] --localdir\n    dockerfile: null                        # [str] --dockerfile\n    auto_resume: bool                       # [bool] --auto_resume (flag)\n    datastore_name: null                    # [str] --datastore_name\n    datastore_version: null                 # [int] --datastore_version\n    datastore_mount_dir: null               # [str] by default mounts to /datastores/{datastore_name}  --datastore_mount_dir\n    actions:                                # Pass list of commands to be executed at given moment.\n      on_build: null                        # List[str]\n      on_build_start: null\n      on_build_end: null\n      on_experiment_end: null\n      on_experiment_start: null\n    scratch:\n      size_gb: 100                          # [int] --scratch_size default 100 int\n      mount_path: /tmp/scratch              # [str] --scratch_mount_path default\n\n# This section defines the hyperparameters settings. \n# We currently have 3 strategies: grid_search, random_search and none.\n# strategy_options are only for the random_search strategy.\nhyper_params:\n  settings:\n    strategy: grid_search                   # [enum] One of `['grid_search', 'random_search', 'none']`\n    strategy_options:                       # For 'random_search' we must at least define num_trials \n      num_trials: 1                         # [int] we must specify the num_trials (via CLI or config) if we use random_search strategy (--num_trials)\n      seed: 0                               # [int] --seed\n  \n  # Additional script parameters appended as \"{key} {value}\"\n  params: [dict[str, str]]                  # Dict of key: value entries appended to as script parameters\n    --foo: 1                                # [str: str]\n    -bar: something\n")),(0,o.kt)("h2",{id:"creating-runs-with-a-config-file"},"Creating Runs With a Config File"),(0,o.kt)("p",null,"You can create a Run with a config file instead of passing CLI arguments. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"grid run --config my_config.yml script.py\n")))}d.isMDXComponent=!0}}]);